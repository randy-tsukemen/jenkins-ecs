AWSTemplateFormatVersion: "2010-09-09"
Description: "Jenkins Controller Service on ECS for 1000 concurrent jobs"

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where Jenkins will be deployed

  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Private subnets for Jenkins controller

  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Public subnets for ALB

  SSLCertificateArn:
    Type: String
    Description: ARN of SSL certificate for HTTPS

Resources:
  # EFS for persistent storage
  JenkinsEFSFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: true
      PerformanceMode: generalPurpose
      ThroughputMode: bursting
      FileSystemTags:
        - Key: Name
          Value: JenkinsHome

  JenkinsMountTargets:
    Type: AWS::EFS::MountTarget
    DependsOn: JenkinsEFSFileSystem
    Properties:
      FileSystemId: !Ref JenkinsEFSFileSystem
      SubnetId: !Select [0, !Ref PrivateSubnets]
      SecurityGroups:
        - !Ref JenkinsEFSSecurityGroup

  # Security Groups
  JenkinsControllerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Jenkins controller
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !Ref JenkinsALBSecurityGroup
        - IpProtocol: tcp
          FromPort: 50000
          ToPort: 50000
          SourceSecurityGroupId: !Ref JenkinsAgentSecurityGroup

  JenkinsALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Jenkins ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  JenkinsAgentSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Jenkins agents
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  JenkinsEFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Jenkins EFS
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref JenkinsControllerSecurityGroup

  # IAM Roles
  JenkinsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonECR-FullAccess
        - arn:aws:iam::aws:policy/AmazonECS-FullAccess
      Policies:
        - PolicyName: JenkinsAgentManagement
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                  - ecs:ListClusters
                  - ecs:ListContainerInstances
                  - ecs:DescribeContainerInstances
                  - ecs:ListTaskDefinitions
                  - ecs:RegisterTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - ecs:ListTasks
                  - ecs:RunTask
                  - ecs:StopTask
                  - ecs:DescribeTasks
                Resource: "*"
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: "*"

  JenkinsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # CloudWatch Logs
  JenkinsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/jenkins-controller
      RetentionInDays: 14

  # ECS Cluster
  JenkinsECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: jenkins-cluster
      CapacityProviders:
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1

  # ECS Task Definition
  JenkinsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: jenkins-controller
      Cpu: "4096" # 4 vCPU
      Memory: "16384" # 16GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt JenkinsExecutionRole.Arn
      TaskRoleArn: !GetAtt JenkinsTaskRole.Arn
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: jenkins
          Image: jenkins/jenkins:lts
          Essential: true
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
            - ContainerPort: 50000
              HostPort: 50000
          Environment:
            - Name: JAVA_OPTS
              Value: >-
                -Xmx12g -Xms12g -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent
                -Djenkins.install.runSetupWizard=false
                -Dhudson.slaves.NodeProvisioner.initialDelay=0
                -Dhudson.slaves.NodeProvisioner.MARGIN=50
                -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
          MountPoints:
            - SourceVolume: jenkins-home
              ContainerPath: /var/jenkins_home
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref JenkinsLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: jenkins
      Volumes:
        - Name: jenkins-home
          EFSVolumeConfiguration:
            FilesystemId: !Ref JenkinsEFSFileSystem
            TransitEncryption: ENABLED

  # ALB
  JenkinsALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: jenkins-alb
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "60"
      Subnets: !Ref PublicSubnets
      SecurityGroups:
        - !Ref JenkinsALBSecurityGroup

  JenkinsTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: jenkins-tg
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /login
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5

  JenkinsHTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref JenkinsALB
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-2-2017-01
      Certificates:
        - CertificateArn: !Ref SSLCertificateArn
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref JenkinsTargetGroup

  # ECS Service
  JenkinsService:
    Type: AWS::ECS::Service
    DependsOn: JenkinsHTTPSListener
    Properties:
      ServiceName: jenkins-controller
      Cluster: !Ref JenkinsECSCluster
      TaskDefinition: !Ref JenkinsTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref PrivateSubnets
          SecurityGroups:
            - !Ref JenkinsControllerSecurityGroup
          AssignPublicIp: DISABLED
      LoadBalancers:
        - ContainerName: jenkins
          ContainerPort: 8080
          TargetGroupArn: !Ref JenkinsTargetGroup

  # CloudWatch Alarms
  JenkinsHighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: High CPU utilization for Jenkins controller
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: 80
      AlarmActions:
        - !Ref JenkinsNotificationTopic
      Dimensions:
        - Name: ClusterName
          Value: !Ref JenkinsECSCluster
        - Name: ServiceName
          Value: !Ref JenkinsService
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  JenkinsNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: JenkinsAlerts

Outputs:
  JenkinsURL:
    Description: URL for Jenkins
    Value: !Sub https://${JenkinsALB.DNSName}

  JenkinsEFSId:
    Description: EFS ID for Jenkins home
    Value: !Ref JenkinsEFSFileSystem

  JenkinsControllerSecurityGroupId:
    Description: Security Group ID for Jenkins controller
    Value: !Ref JenkinsControllerSecurityGroup

  JenkinsAgentSecurityGroupId:
    Description: Security Group ID for Jenkins agents
    Value: !Ref JenkinsAgentSecurityGroup
